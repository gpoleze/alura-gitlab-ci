image: docker:stable

stages:
- image-build
- build
- test
- deploy

services: 
- docker:dind

build-docker-image:
  before_script:
  - docker login -u "$CI_REGISTRY_USERNAME" -p "$CI_REGISTRY_PASSWORD"
  stage: image-build
  script:
  - docker build -t alura-gitlab-ci .
  - docker tag alura-gitlab-ci gpoleze/alura-gitlab-ci:latest
  - docker push gpoleze/alura-gitlab-ci:latest

build-project:
  stage: build
  image: gpoleze/alura-gitlab-ci:latest
  services:
  - docker:dind
  - mysql:5.7
  variables:
    MYSQL_USER: $MYSQL_USER
    MYSQL_PASSWORD: $MYSQL_PASSWORD
    MYSQL_DATABASE: $MYSQL_DATABASE
    MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD

    DB_USER: $MYSQL_USER
    DB_PASSWORD: $MYSQL_PASSWORD
    DB_NAME: $MYSQL_DATABASE
    DB_PORT: '3306'
    DB_HOST: 'mysql'

    SECRET_KEY: $SECRET_KEY

  dependencies:
  - build-docker-image
  tags:
  - alura-executor
  script:
  - python manage.py makemigrations
  - python manage.py migrate

test-projetc:
  stage: test
  dependencies:
    - build-project
  tags:
    - alura-executor
  services:
    - mysql:5.7
  script:
    - python -m unittest setUp
  # TODO - Next parrt has to be optimized
  variables:
    MYSQL_USER: $MYSQL_USER
    MYSQL_PASSWORD: $MYSQL_PASSWORD
    MYSQL_DATABASE: $MYSQL_DATABASE
    MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD

    DB_USER: $MYSQL_USER
    DB_PASSWORD: $MYSQL_PASSWORD
    DB_NAME: $MYSQL_DATABASE
    DB_PORT: '3306'
    DB_HOST: 'mysql'

    SECRET_KEY: $SECRET_KEY